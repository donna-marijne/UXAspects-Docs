webpackJsonp([20],{1071:function(n,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var t=function(){function n(n){var a=this;this.snippets={compiled:{},raw:{}},n.keys().forEach(function(s){var t=s.replace("./","").replace(/\W+(\w)/g,function(n){return n[1].toUpperCase()}),o=n(s);o.snippet&&(a.snippets.compiled[t]=o.snippet),o.example&&(a.snippets.raw[t]=o.example)})}return n}();a.BaseDocumentationSection=t},1080:function(n,a,s){"use strict";!function(n){for(var s in n)a.hasOwnProperty(s)||(a[s]=n[s])}(s(1083))},1083:function(n,a,s){"use strict";function t(n,a){return"rgba("+n.concat(a).join(",")+")"}function o(n,a){return Math.floor(Math.random()*(a-n+1))+n}function p(n){return{backgroundColor:t(n,.4),borderColor:t(n,1),pointBackgroundColor:t(n,1),pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:t(n,.8)}}function e(n){return{backgroundColor:t(n,.6),borderColor:t(n,1),hoverBackgroundColor:t(n,.8),hoverBorderColor:t(n,1)}}function c(n){return{backgroundColor:n.map(function(n){return t(n,.6)}),borderColor:n.map(function(){return"#fff"}),pointBackgroundColor:n.map(function(n){return t(n,1)}),pointBorderColor:n.map(function(){return"#fff"}),pointHoverBackgroundColor:n.map(function(n){return t(n,1)}),pointHoverBorderColor:n.map(function(n){return t(n,1)})}}function r(n){return{backgroundColor:n.map(function(n){return t(n,.6)}),borderColor:n.map(function(n){return t(n,1)}),hoverBackgroundColor:n.map(function(n){return t(n,.8)}),hoverBorderColor:n.map(function(n){return t(n,1)})}}function l(){return[o(0,255),o(0,255),o(0,255)]}function u(n){return f.defaultColors[n]||l()}function i(n){for(var a=new Array(n),s=0;s<n;s++)a[s]=f.defaultColors[s]||l();return a}function k(n,a,s){return"pie"===n||"doughnut"===n?c(i(s)):"polarArea"===n?r(i(s)):"line"===n||"radar"===n?p(u(a)):"bar"===n||"horizontalBar"===n?e(u(a)):u(a)}var h=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},d=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},b=s(2),g=s(1085),f=function(){function n(n){this.labels=[],this.options={},this.chartClick=new b.EventEmitter,this.chartHover=new b.EventEmitter,this.initFlag=!1,this.element=n}return n.prototype.ngOnInit=function(){this.ctx=this.element.nativeElement.getContext("2d"),this.cvs=this.element.nativeElement,this.initFlag=!0,(this.data||this.datasets)&&this.refresh()},n.prototype.ngOnChanges=function(n){this.initFlag&&(n.hasOwnProperty("data")||n.hasOwnProperty("datasets")?(n.data?this.updateChartData(n.data.currentValue):this.updateChartData(n.datasets.currentValue),this.chart.update()):this.refresh())},n.prototype.ngOnDestroy=function(){this.chart&&(this.chart.destroy(),this.chart=void 0)},n.prototype.getChartBuilder=function(n){var a=this,s=this.getDatasets(),t=Object.assign({},this.options);!1===this.legend&&(t.legend={display:!1}),t.hover=t.hover||{},t.hover.onHover||(t.hover.onHover=function(n){n&&!n.length||a.chartHover.emit({active:n})}),t.onClick||(t.onClick=function(n,s){a.chartClick.emit({event:n,active:s})});var o={type:this.chartType,data:{labels:this.labels,datasets:s},options:t};return new g.Chart(n,o)},n.prototype.updateChartData=function(n){Array.isArray(n[0].data)?this.chart.data.datasets.forEach(function(a,s){a.data=n[s].data,n[s].label&&(a.label=n[s].label)}):this.chart.data.datasets[0].data=n},n.prototype.getDatasets=function(){var n=this,a=void 0;if((!this.datasets||!this.datasets.length&&this.data&&this.data.length)&&(a=Array.isArray(this.data[0])?this.data.map(function(a,s){return{data:a,label:n.labels[s]||"Label "+s}}):[{data:this.data,label:"Label 0"}]),(this.datasets&&this.datasets.length||a&&a.length)&&(a=(this.datasets||a).map(function(a,s){var t=Object.assign({},a);return n.colors&&n.colors.length?Object.assign(t,n.colors[s]):Object.assign(t,k(n.chartType,s,t.data.length)),t})),!a)throw new Error("ng-charts configuration error,\n      data or datasets field are required to render char "+this.chartType);return a},n.prototype.refresh=function(){this.ngOnDestroy(),this.chart=this.getChartBuilder(this.ctx)},n}();f.defaultColors=[[255,99,132],[54,162,235],[255,206,86],[231,233,237],[75,192,192],[151,187,205],[220,220,220],[247,70,74],[70,191,189],[253,180,92],[148,159,177],[77,83,96]],h([b.Input(),d("design:type",Array)],f.prototype,"data",void 0),h([b.Input(),d("design:type",Array)],f.prototype,"datasets",void 0),h([b.Input(),d("design:type",Array)],f.prototype,"labels",void 0),h([b.Input(),d("design:type",Object)],f.prototype,"options",void 0),h([b.Input(),d("design:type",String)],f.prototype,"chartType",void 0),h([b.Input(),d("design:type",Array)],f.prototype,"colors",void 0),h([b.Input(),d("design:type",Boolean)],f.prototype,"legend",void 0),h([b.Output(),d("design:type",b.EventEmitter)],f.prototype,"chartClick",void 0),h([b.Output(),d("design:type",b.EventEmitter)],f.prototype,"chartHover",void 0),f=h([b.Directive({selector:"canvas[baseChart]",exportAs:"base-chart"}),d("design:paramtypes",[b.ElementRef])],f),a.BaseChartDirective=f;var C=function(){function n(){}return n}();C=h([b.NgModule({declarations:[f],exports:[f],imports:[]})],C),a.ChartsModule=C},2811:function(n,a,s){"use strict";var t=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},o=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var p=s(2),e=s(32),c=s(1080),r=s(354),l=s(356),u=s(357),i=s(186),k=s(2812),h=s(2818),d=s(2823),b=s(355),g=s(2832),f=s(2838),C=s(2844),m=[g.ChartsBarChartComponent,k.ChartsBarChartNg1Component,h.ChartsHorizontalBarChartNg1Component,d.ChartsStackedBarChartNg1Component,f.ChartsHorizontalBarChartComponent,C.ChartsStackedBarChartComponent],y=[{path:"**",component:b.DocumentationCategoryComponent,data:{category:i.ResolverService.resolveCategoryData(i.DocumentationPage.Charts,"Bar Charts")}}],v=function(){function n(n,a){a.registerResolver(n)}return n}();v=t([p.NgModule({imports:[r.DocumentationComponentsModule,l.TabsModule,u.WrappersModule,c.ChartsModule,e.RouterModule.forChild(y)],exports:m,declarations:m,entryComponents:m}),o("design:paramtypes",[p.ComponentFactoryResolver,i.ResolverService])],v),a.ChartsBarChartsModule=v},2812:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2813))||this;return t.codepen={html:t.snippets.raw.chartHtml,js:[t.snippets.raw.chartJs],htmlAttributes:{"ng-controller":"BarChartCtrl as bc"}},t.data=[{label:"bar",data:[[1,34],[2,25],[3,19],[4,34],[5,32],[6,44]],forecastData:[[7,50],[8,67]]}],t.options={series:{bars:{show:!0,fill:!0,fillColor:{colors:[{opacity:.1},{opacity:.1}]},barWidth:.5,lineWidth:1,align:"center"},highlightColor:a.getColor("chart1").setAlpha(.2).toRgba(),forecastFillColor:a.getColor("chart1").setAlpha(.3).toRgba(),forecastColor:a.getColor("chart1").setAlpha(.8).toRgba(),forecastHighLightColor:a.getColor("chart1").setAlpha(.2).toRgba(),forecastDashStyle:[5]},xaxis:{tickDecimals:0,color:a.getColor("secondary").toHex(),ticks:[[1,".doc"],[2,".ppt"],[3,".pdf"],[4,".xls"],[5,".html"],[6,".txt"],[7,".csv"],[8,".mht"]]},colors:[a.getColor("primary").toRgb()],grid:{color:a.getColor("grey4").toHex(),hoverable:!0,clickable:!0,borderWidth:{left:1,bottom:1,right:0,top:0},borderColor:{left:a.getColor("grey2").setAlpha(.5).toRgba(),bottom:a.getColor("grey2").setAlpha(.5).toRgba()}},legend:{show:!1},tooltip:{show:!0,shifts:{x:0,y:-30},content:function(n,a,s){return"x: %x, y: "+s}}},t}return t(a,n),a}(l.BaseDocumentationSection);u=o([e.Component({selector:"uxd-charts-bar-chart-ng1",template:s(2817),changeDetection:e.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ChartsBarChartNg1Component"),p("design:paramtypes",[r.ColorService])],u),a.ChartsBarChartNg1Component=u},2813:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./accessibility.html":2814,"./chart.html":2815,"./chart.js":2816};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2813},2814:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in bc.barChart.data[0].data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{item[1]}},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>',example:'<span tabindex="0" class="sr-only">\r\n    <span ng-repeat="item in bc.barChart.data[0].data">{{item[1]}},</span>\r\n</span>'}},2815:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.barChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.barChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\r\n    <flot dataset="bc.data" options="bc.options" on-plot-click="bc.barChart.onPlotClick(event,pos,item)"\r\n        on-hover-click="bc.barChart.onPlotHover(event,pos,item)">\r\n    </flot>\r\n</div>'}},2816:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"BarChartCtrl"</span><span class="token punctuation">,</span> BarChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\nBarChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">BarChartCtrl</span><span class="token punctuation">(</span>$colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> bc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    bc<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n        label<span class="token punctuation">:</span> <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n            <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        forecastData<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n            <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">]</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    bc<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        series<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            bars<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                fill<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                fillColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                barWidth<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\r\n                lineWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                align<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            highlightColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            forecastFillColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            forecastColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            forecastHighLightColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            forecastDashStyle<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            tickDecimals<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n            color<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"secondary"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            ticks<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n                <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">\'.doc\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">\'.mht\'</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">]</span>\r\n\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'primary\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            color<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            hoverable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            clickable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                left<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                bottom<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                right<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                top<span class="token punctuation">:</span> <span class="token number">0</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                left<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n                bottom<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            show<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">30</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            content<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>label<span class="token punctuation">,</span> xval<span class="token punctuation">,</span> yval<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">\'x: \'</span> <span class="token operator">+</span> <span class="token string">\'%x\'</span> <span class="token operator">+</span> <span class="token string">\', y: \'</span> <span class="token operator">+</span> yval<span class="token punctuation">;</span>\r\n                <span class="token keyword">return</span> content<span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:"angular.module(\"app\").controller(\"BarChartCtrl\", BarChartCtrl);\r\n\r\nBarChartCtrl.$inject = ['$colorService'];\r\n\r\nfunction BarChartCtrl($colorService) {\r\n    var bc = this;\r\n\r\n    bc.data = [{\r\n        label: 'bar',\r\n        data: [\r\n            [1, 34],\r\n            [2, 25],\r\n            [3, 19],\r\n            [4, 34],\r\n            [5, 32],\r\n            [6, 44]\r\n        ],\r\n        forecastData: [\r\n            [7, 50],\r\n            [8, 67]\r\n        ]\r\n    }];\r\n\r\n    bc.options = {\r\n        series: {\r\n            bars: {\r\n                show: true,\r\n                fill: true,\r\n                fillColor: {\r\n                    colors: [{\r\n                        opacity: 0.1\r\n                    }, {\r\n                        opacity: 0.1\r\n                    }]\r\n                },\r\n                barWidth: 0.5,\r\n                lineWidth: 1,\r\n                align: 'center'\r\n            },\r\n            highlightColor: $colorService.getColor(\"chart1\").setAlpha(0.2).toRgba(),\r\n            forecastFillColor: $colorService.getColor(\"chart1\").setAlpha(0.3).toRgba(),\r\n            forecastColor: $colorService.getColor(\"chart1\").setAlpha(0.8).toRgba(),\r\n            forecastHighLightColor: $colorService.getColor(\"chart1\").setAlpha(0.2).toRgba(),\r\n            forecastDashStyle: [5]\r\n        },\r\n        xaxis: {\r\n            tickDecimals: 0,\r\n            color: $colorService.getColor(\"secondary\").toHex(),\r\n            ticks: [\r\n                [1, '.doc'],\r\n                [2, '.ppt'],\r\n                [3, '.pdf'],\r\n                [4, '.xls'],\r\n                [5, '.html'],\r\n                [6, '.txt'],\r\n                [7, '.csv'],\r\n                [8, '.mht']\r\n            ]\r\n\r\n        },\r\n        colors: [$colorService.getColor('primary').toRgb()],\r\n        grid: {\r\n            color: $colorService.getColor('grey4').toHex(),\r\n            hoverable: true,\r\n            clickable: true,\r\n            borderWidth: {\r\n                left: 1,\r\n                bottom: 1,\r\n                right: 0,\r\n                top: 0\r\n            },\r\n            borderColor: {\r\n                left: $colorService.getColor(\"grey2\").setAlpha(0.5).toRgba(),\r\n                bottom: $colorService.getColor(\"grey2\").setAlpha(0.5).toRgba()\r\n            }\r\n        },\r\n        legend: {\r\n            show: false\r\n        },\r\n        tooltip: {\r\n            show: true,\r\n            shifts: {\r\n                x: 0,\r\n                y: -30\r\n            },\r\n            content: function (label, xval, yval) {\r\n                var content = 'x: ' + '%x' + ', y: ' + yval;\r\n                return content;\r\n            }\r\n        }\r\n    };\r\n}"}},2817:function(n,a){n.exports='<div class="flot-chart">\r\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">label</td>\r\n                <td>string</td>\r\n                <td>Label name specified in the legend.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">data</td>\r\n                <td>number or array</td>\r\n                <td>An array of coordinates in chart e.g. [ [x1, y1], [x2, y2], ... ]</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastData</td>\r\n                <td>number or array</td>\r\n                <td>An array of coordinates defining the forecast or future data, e.g [ [x1, y1], [x2, y2], ... ]</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>Bar Charts are defined by the <code>flot</code> directive. The dataset and options attribute define the bar chart data and\r\n    options respectively. Dataset and Options are defined within the BarChartCtrl.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\r\n</blockquote>\r\n\r\n<p>To convey chart information to users with assistive technologies, you can include a text version of the data. Use the <code>sr-only</code>    class to make the text hidden but visible to screen readers, and give the container a <code>tabindex</code> attribute\r\n    so it can be reached with the keyboard, and place it near the chart.</p>\r\n\r\n<uxd-snippet language="html" [content]="snippets.compiled.accessibilityHtml"></uxd-snippet>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\r\n</blockquote>'},2818:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2819))||this;return t.codepen={html:t.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"HorizontalBarChartCtrl as bc"},js:[t.snippets.raw.chartJs]},t.data=[{label:"bar",data:[[34,1],[25,2],[19,3],[34,4],[32,5],[44,6]]}],t.options={series:{bars:{show:!0,fill:!0,fillColor:{colors:[{opacity:.1},{opacity:.1}]},barWidth:.5,lineWidth:1,horizontal:!0,align:"center"},highlightColor:[a.getColor("chart1").setAlpha(.2).toRgba()],valueLabels:{show:!0,valign:"top",plotAxis:"y",xoffset:-30,yoffset:-5,font:"13px 'Source Sans Pro'",fontcolor:"#545454",labelFormatter:function(n){return[".doc",".ppt",".pdf",".xls",".html",".txt"][parseInt(n)-1]}}},xaxis:{tickDecimals:0,color:[a.getColor("secondary").toHex()]},yaxis:{ticks:[]},colors:[a.getColor("chart1").toRgb()],grid:{color:[a.getColor("grey4").toHex()],hoverable:!0,clickable:!0,borderWidth:{left:1,bottom:1,right:0,top:0},borderColor:{left:[a.getColor("grey1").setAlpha(.2).toRgba()],bottom:[a.getColor("grey1").setAlpha(.2).toRgba()]}},legend:{show:!1},tooltip:{show:!0,shifts:{x:0,y:-38},content:function(n,a,s){return"x: "+a+", y: "+[".doc",".ppt",".pdf",".xls",".html",".txt"][parseInt(s)-1]}}},t}return t(a,n),a}(l.BaseDocumentationSection);u=o([e.Component({selector:"uxd-charts-horizontal-bar-chart-ng1",template:s(2822),changeDetection:e.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ChartsHorizontalBarChartNg1Component"),p("design:paramtypes",[r.ColorService])],u),a.ChartsHorizontalBarChartNg1Component=u},2819:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./chart.html":2820,"./chart.js":2821};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2819},2820:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.horizbarChart.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.horizbarChart.baroptions<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.horizbarChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.horizbarChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\r\n    <flot dataset="bc.horizbarChart.data" options="bc.horizbarChart.baroptions" on-plot-click="bc.horizbarChart.onPlotClick(event,pos,item)"\r\n        on-hover-click="bc.horizbarChart.onPlotHover(event,pos,item)"></flot>\r\n</div>'}},2821:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"HorizontalBarChartCtrl"</span><span class="token punctuation">,</span> HorizontalBarChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\nHorizontalBarChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">HorizontalBarChartCtrl</span><span class="token punctuation">(</span>$colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token keyword">var</span> bc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    bc<span class="token punctuation">.</span>horizbarChart <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n            label<span class="token punctuation">:</span> <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\r\n            data<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n                <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">]</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        baroptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            series<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                bars<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    fill<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    fillColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                            opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n                            opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                        <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    barWidth<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\r\n                    lineWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    horizontal<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    align<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                valueLabels<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    valign<span class="token punctuation">:</span> <span class="token string">\'top\'</span><span class="token punctuation">,</span>\r\n                    plotAxis<span class="token punctuation">:</span> <span class="token string">\'y\'</span><span class="token punctuation">,</span>\r\n                    xoffset<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span>\r\n                    yoffset<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span>\r\n                    font<span class="token punctuation">:</span> <span class="token string">\'13px \\\'Source Sans Pro\\\'\'</span><span class="token punctuation">,</span>\r\n                    fontcolor<span class="token punctuation">:</span> <span class="token string">\'#545454\'</span><span class="token punctuation">,</span>\r\n                    labelFormatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">var</span> ticks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                        <span class="token keyword">return</span> ticks<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                tickDecimals<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"secondary"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                ticks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                hoverable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                clickable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    left<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    bottom<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    right<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    top<span class="token punctuation">:</span> <span class="token number">0</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    left<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                    bottom<span class="token punctuation">:</span> <span class="token punctuation">[</span>$colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">38</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                content<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>label<span class="token punctuation">,</span> xval<span class="token punctuation">,</span> yval<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    <span class="token keyword">var</span> ticks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                    <span class="token keyword">return</span> <span class="token string">\'x: \'</span> <span class="token operator">+</span> xval <span class="token operator">+</span> <span class="token string">\', y: \'</span> <span class="token operator">+</span> ticks<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>yval<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token punctuation">}</span>',example:"angular.module(\"app\").controller(\"HorizontalBarChartCtrl\", HorizontalBarChartCtrl);\r\n\r\nHorizontalBarChartCtrl.$inject = ['$colorService'];\r\n\r\nfunction HorizontalBarChartCtrl($colorService) {\r\n    var bc = this;\r\n\r\n    bc.horizbarChart = {\r\n        data: [{\r\n            label: 'bar',\r\n            data: [\r\n                [34, 1],\r\n                [25, 2],\r\n                [19, 3],\r\n                [34, 4],\r\n                [32, 5],\r\n                [44, 6]\r\n            ]\r\n        }],\r\n        baroptions: {\r\n            series: {\r\n                bars: {\r\n                    show: true,\r\n                    fill: true,\r\n                    fillColor: {\r\n                        colors: [{\r\n                            opacity: 0.1\r\n                        }, {\r\n                            opacity: 0.1\r\n                        }]\r\n                    },\r\n                    barWidth: 0.5,\r\n                    lineWidth: 1,\r\n                    horizontal: true,\r\n                    align: 'center'\r\n                },\r\n                highlightColor: [$colorService.getColor(\"chart1\").setAlpha(0.2).toRgba()],\r\n                valueLabels: {\r\n                    show: true,\r\n                    valign: 'top',\r\n                    plotAxis: 'y',\r\n                    xoffset: -30,\r\n                    yoffset: -5,\r\n                    font: '13px \\'Source Sans Pro\\'',\r\n                    fontcolor: '#545454',\r\n                    labelFormatter: function (v) {\r\n                        var ticks = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt'];\r\n                        return ticks[parseInt(v) - 1];\r\n                    }\r\n                }\r\n            },\r\n            xaxis: {\r\n                tickDecimals: 0,\r\n                color: [$colorService.getColor(\"secondary\").toHex()]\r\n            },\r\n            yaxis: {\r\n                ticks: []\r\n            },\r\n            colors: [$colorService.getColor(\"chart1\").toRgb()],\r\n            grid: {\r\n                color: [$colorService.getColor('grey4').toHex()],\r\n                hoverable: true,\r\n                clickable: true,\r\n                borderWidth: {\r\n                    left: 1,\r\n                    bottom: 1,\r\n                    right: 0,\r\n                    top: 0\r\n                },\r\n                borderColor: {\r\n                    left: [$colorService.getColor(\"grey1\").setAlpha(0.2).toRgba()],\r\n                    bottom: [$colorService.getColor(\"grey1\").setAlpha(0.2).toRgba()]\r\n                }\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            tooltip: {\r\n                show: true,\r\n                shifts: {\r\n                    x: 0,\r\n                    y: -38\r\n                },\r\n                content: function (label, xval, yval) {\r\n                    var ticks = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt'];\r\n                    return 'x: ' + xval + ', y: ' + ticks[parseInt(yval) - 1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n}"}},2822:function(n,a){n.exports='<div class="flot-chart">\r\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n    <tbody><tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">horizontal</td>\r\n        <td>boolean</td>\r\n        <td>If true the bars will be presented horizontally.</td>\r\n        <td>true</td>\r\n    </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>Horizontal Bar Charts are defined by the <code>flot</code> directive. The dataset and options attributes define the chart data and options respectively.\r\nDataset and Options are defined within the HorizontalBarChartCtrl.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\r\n</blockquote>\r\n\r\n<p>Horizontal bar charts are an enhanced version of bar charts. For more information on options, refer to the bar chart documentation.</p>\r\n\r\n<blockquote>\r\n  <p>Refer to <a href="https://github.com/winne27/flot-valuelabels/wiki">flot-valuelabels</a> for more options on value labels.</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\r\n</blockquote>'},2823:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2824))||this;t.codepen={html:t.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"StackedBarChartCtrl as bc"},js:[t.snippets.raw.chartJs]};for(var o={chartColor1:a.getColor("chart1").setAlpha(.7).toRgba(),chartColor2:a.getColor("chart2").setAlpha(.7).toRgba(),chartColor3:a.getColor("chart3").setAlpha(.7).toRgba(),chartHover1:a.getColor("chart1").setAlpha(.2).toRgba(),chartHover2:a.getColor("chart2").setAlpha(.3).toRgba(),chartHover3:a.getColor("chart3").setAlpha(.3).toRgba(),forecastColor1:a.getColor("chart1").setAlpha(.3).toRgba(),forecastColor2:a.getColor("chart2").setAlpha(.2).toRgba(),forecastColor3:a.getColor("chart3").setAlpha(.2).toRgba(),gridColor:a.getColor("grey4").toHex(),tickColor:a.getColor("grey6").toHex(),transparent:"rgba(0, 0, 0, 0)",borderColor:a.getColor("grey2").toHex()},p=[],e=[],c=[],r=[],l=[],u=[],i=1;i<=10;i+=1)p.push([i,Math.floor(1e4*Math.random())]),e.push([i,Math.floor(1e4*Math.random())]),c.push([i,Math.floor(1e4*Math.random())]);for(var i=11;i<=13;i++)r.push([i,Math.floor(1e4*Math.random())]),l.push([i,Math.floor(1e4*Math.random())]),u.push([i,Math.floor(1e4*Math.random())]);return t.data=[{label:"Sales 1",data:p,color:[o.chartColor1],highlightColor:[o.chartHover1],forecastData:r,forecastFillColor:[o.forecastColor1],forecastColor:[o.chartColor1],forecastHighLightColor:[o.chartHover1],forecastDashStyle:[5]},{label:"Sales 2",data:e,color:[o.chartColor2],highlightColor:[o.chartHover2],forecastData:l,forecastFillColor:[o.forecastColor2],forecastColor:[o.chartColor2],forecastHighLightColor:[o.chartColor2],forecastDashStyle:[5]},{label:"Sales 3",data:c,color:[o.chartColor3],highlightColor:[o.chartHover3],forecastData:u,forecastFillColor:[o.forecastColor3],forecastColor:[o.chartColor3],forecastHighLightColor:[o.chartHover3],forecastDashStyle:[5]}],t.options={series:{stack:!0,bars:{show:!0,barWidth:.6,lineWidth:0,align:"center"}},xaxis:{tickColor:"transparent"},yaxis:{tickFormatter:t.euroFormatter},grid:{color:[o.gridColor],hoverable:!0,clickable:!0,tickcolor:[o.tickColor],borderWidth:{left:1,bottom:1,right:0,top:0},borderColor:{left:[o.borderColor],bottom:[o.borderColor]}},legend:{show:!0,container:"#legendHolderBar",noColumns:0},tooltip:{show:!0,shifts:{x:0,y:-44},content:'<strong>%s</strong><br/><span class="font-size-small"> %y in cycle %x</span>'}},t}return t(a,n),a.prototype.euroFormatter=function(n,a){return n.toFixed(a.tickDecimals)+"€"},a}(l.BaseDocumentationSection);u=o([e.Component({selector:"uxd-charts-stacked-bar-chart-ng1",template:s(2831),changeDetection:e.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ChartsStackedBarChartNg1Component"),p("design:paramtypes",[r.ColorService])],u),a.ChartsStackedBarChartNg1Component=u},2824:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./accessibility.html":2825,"./chart.html":2826,"./chart.js":2827,"./legend.css":2828,"./legend.html":2829,"./legend.js":2830};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2824},2825:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in bc.stackChart.data[0].data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{item[1]}},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>',example:'<span tabindex="0" class="sr-only">\r\n    <span ng-repeat="item in bc.stackChart.data[0].data">{{item[1]}},</span>\r\n</span>'}},2826:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart-stack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.stackBarChart.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.stackBarChart.stackoptions<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.stackBarChart.onPlotClick(event, pos, item)<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bc.stackBarChart.onPlotHover(event, pos, item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart-stack">\r\n    <flot dataset="bc.stackBarChart.data" options="bc.stackBarChart.stackoptions" on-plot-click="bc.stackBarChart.onPlotClick(event, pos, item)"\r\n        on-hover-click="bc.stackBarChart.onPlotHover(event, pos, item)"></flot>\r\n</div>'}},2827:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"StackedBarChartCtrl"</span><span class="token punctuation">,</span> StackedBarChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\nStackedBarChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"$colorService"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">StackedBarChartCtrl</span><span class="token punctuation">(</span>$colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token keyword">var</span> bc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        chartColor1<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        chartColor2<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        chartColor3<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        chartHover1<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        chartHover2<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        chartHover3<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        forecastColor1<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        forecastColor2<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        forecastColor3<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"chart3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        gridColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        tickColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey6"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        transparent<span class="token punctuation">:</span> <span class="token string">"rgba(0, 0, 0, 0)"</span><span class="token punctuation">,</span>\r\n        borderColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">"grey2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        d2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        d3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        fd1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        fd2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        fd3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        d1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        d2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        d3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">13</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        fd1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        fd2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        fd3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token keyword">function</span> <span class="token function">euroFormatter</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> axis<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>axis<span class="token punctuation">.</span>tickDecimals<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"€"</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    bc<span class="token punctuation">.</span>stackBarChart <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 1"</span><span class="token punctuation">,</span>\r\n            data<span class="token punctuation">:</span> d1<span class="token punctuation">,</span>\r\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor1<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover1<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastData<span class="token punctuation">:</span> fd1<span class="token punctuation">,</span>\r\n            forecastFillColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>forecastColor1<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor1<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastHighLightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover1<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastDashStyle<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 2"</span><span class="token punctuation">,</span>\r\n            data<span class="token punctuation">:</span> d2<span class="token punctuation">,</span>\r\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor2<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover2<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastData<span class="token punctuation">:</span> fd2<span class="token punctuation">,</span>\r\n            forecastFillColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>forecastColor2<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor2<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastHighLightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor2<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastDashStyle<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n            label<span class="token punctuation">:</span> <span class="token string">"Sales 3"</span><span class="token punctuation">,</span>\r\n            data<span class="token punctuation">:</span> d3<span class="token punctuation">,</span>\r\n            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor3<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover3<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastData<span class="token punctuation">:</span> fd3<span class="token punctuation">,</span>\r\n            forecastFillColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>forecastColor3<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartColor3<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastHighLightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>chartHover3<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            forecastDashStyle<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        stackoptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            series<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                stack<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                bars<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    barWidth<span class="token punctuation">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\r\n                    lineWidth<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    align<span class="token punctuation">:</span> <span class="token string">"center"</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                tickColor<span class="token punctuation">:</span> <span class="token string">"transparent"</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                tickFormatter<span class="token punctuation">:</span> euroFormatter\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                hoverable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                clickable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                tickcolor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>tickColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"right"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token number">0</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                container<span class="token punctuation">:</span> <span class="token string">"#legendHolderBar"</span><span class="token punctuation">,</span>\r\n                noColumns<span class="token punctuation">:</span> <span class="token number">0</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">44</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                content<span class="token punctuation">:</span> <span class="token string">"&lt;strong>%s&lt;/strong>&lt;br/>&lt;span class=\\"font-size-small\\"> %y in cycle %x&lt;/span>"</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:'angular.module("app").controller("StackedBarChartCtrl", StackedBarChartCtrl);\r\n\r\nStackedBarChartCtrl.$inject = ["$colorService"];\r\n\r\nfunction StackedBarChartCtrl($colorService) {\r\n\r\n    var bc = this;\r\n\r\n    var flotChartColors = {\r\n        chartColor1: $colorService.getColor("chart1").setAlpha(0.7).toRgba(),\r\n        chartColor2: $colorService.getColor("chart2").setAlpha(0.7).toRgba(),\r\n        chartColor3: $colorService.getColor("chart3").setAlpha(0.7).toRgba(),\r\n        chartHover1: $colorService.getColor("chart1").setAlpha(0.2).toRgba(),\r\n        chartHover2: $colorService.getColor("chart2").setAlpha(0.3).toRgba(),\r\n        chartHover3: $colorService.getColor("chart3").setAlpha(0.3).toRgba(),\r\n        forecastColor1: $colorService.getColor("chart1").setAlpha(0.3).toRgba(),\r\n        forecastColor2: $colorService.getColor("chart2").setAlpha(0.2).toRgba(),\r\n        forecastColor3: $colorService.getColor("chart3").setAlpha(0.2).toRgba(),\r\n        gridColor: $colorService.getColor("grey4").toHex(),\r\n        tickColor: $colorService.getColor("grey6").toHex(),\r\n        transparent: "rgba(0, 0, 0, 0)",\r\n        borderColor: $colorService.getColor("grey2").toHex()\r\n    };\r\n\r\n    var d1 = [],\r\n        d2 = [],\r\n        d3 = [],\r\n        fd1 = [],\r\n        fd2 = [],\r\n        fd3 = [];\r\n\r\n    for (var i = 1; i <= 10; i += 1) {\r\n        d1.push([i, parseInt(Math.random() * 10000)]);\r\n        d2.push([i, parseInt(Math.random() * 10000)]);\r\n        d3.push([i, parseInt(Math.random() * 10000)]);\r\n    }\r\n\r\n    for (i = 11; i <= 13; i++) {\r\n        fd1.push([i, parseInt(Math.random() * 10000)]);\r\n        fd2.push([i, parseInt(Math.random() * 10000)]);\r\n        fd3.push([i, parseInt(Math.random() * 10000)]);\r\n    }\r\n\r\n    function euroFormatter(v, axis) {\r\n        return v.toFixed(axis.tickDecimals) + "€";\r\n    }\r\n\r\n    bc.stackBarChart = {\r\n        data: [{\r\n            label: "Sales 1",\r\n            data: d1,\r\n            color: [flotChartColors.chartColor1],\r\n            highlightColor: [flotChartColors.chartHover1],\r\n            forecastData: fd1,\r\n            forecastFillColor: [flotChartColors.forecastColor1],\r\n            forecastColor: [flotChartColors.chartColor1],\r\n            forecastHighLightColor: [flotChartColors.chartHover1],\r\n            forecastDashStyle: [5]\r\n        }, {\r\n            label: "Sales 2",\r\n            data: d2,\r\n            color: [flotChartColors.chartColor2],\r\n            highlightColor: [flotChartColors.chartHover2],\r\n            forecastData: fd2,\r\n            forecastFillColor: [flotChartColors.forecastColor2],\r\n            forecastColor: [flotChartColors.chartColor2],\r\n            forecastHighLightColor: [flotChartColors.chartColor2],\r\n            forecastDashStyle: [5]\r\n        }, {\r\n            label: "Sales 3",\r\n            data: d3,\r\n            color: [flotChartColors.chartColor3],\r\n            highlightColor: [flotChartColors.chartHover3],\r\n            forecastData: fd3,\r\n            forecastFillColor: [flotChartColors.forecastColor3],\r\n            forecastColor: [flotChartColors.chartColor3],\r\n            forecastHighLightColor: [flotChartColors.chartHover3],\r\n            forecastDashStyle: [5]\r\n        }],\r\n        stackoptions: {\r\n            series: {\r\n                stack: true,\r\n                bars: {\r\n                    show: true,\r\n                    barWidth: 0.6,\r\n                    lineWidth: 0,\r\n                    align: "center"\r\n                }\r\n            },\r\n            xaxis: {\r\n                tickColor: "transparent"\r\n            },\r\n            yaxis: {\r\n                tickFormatter: euroFormatter\r\n            },\r\n            grid: {\r\n                color: [flotChartColors.gridColor],\r\n                hoverable: true,\r\n                clickable: true,\r\n                tickcolor: [flotChartColors.tickColor],\r\n                borderWidth: {\r\n                    "left": 1,\r\n                    "bottom": 1,\r\n                    "right": 0,\r\n                    "top": 0\r\n                },\r\n                borderColor: {\r\n                    "left": [flotChartColors.borderColor],\r\n                    "bottom": [flotChartColors.borderColor]\r\n                }\r\n            },\r\n            legend: {\r\n                show: true,\r\n                container: "#legendHolderBar",\r\n                noColumns: 0\r\n            },\r\n            tooltip: {\r\n                show: true,\r\n                shifts: {\r\n                    x: 0,\r\n                    y: -44\r\n                },\r\n                content: "<strong>%s</strong><br/><span class=\\"font-size-small\\"> %y in cycle %x</span>"\r\n            }\r\n        }\r\n    };\r\n}'}},2828:function(n,a){n.exports={snippet:'<span class="token selector">#legendHolderBar</span> <span class="token punctuation">{</span>\r\n    <span class="token property">margin-left</span><span class="token punctuation">:</span> 33%<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">#legendHolderBar .legendLabel</span> <span class="token punctuation">{</span>\r\n    <span class="token property">padding-right</span><span class="token punctuation">:</span>40px<span class="token punctuation">;</span>\r\n    <span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span>\r\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">#legendHolderBar .legendColorBox > div</span> <span class="token punctuation">{</span>\r\n    <span class="token property">border</span><span class="token punctuation">:</span> 0px <span class="token important">!important</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token selector">#legendHolderBar .legendColorBox > div > div</span> <span class="token punctuation">{</span>\r\n    <span class="token property">opacity</span><span class="token punctuation">:</span>0.5<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:"#legendHolderBar {\r\n    margin-left: 33%;\r\n}\r\n\r\n#legendHolderBar .legendLabel {\r\n    padding-right:40px;\r\n    font-size:16px;\r\n    padding-left: 6px;\r\n}\r\n\r\n#legendHolderBar .legendColorBox > div {\r\n    border: 0px !important;\r\n}\r\n\r\n#legendHolderBar .legendColorBox > div > div {\r\n    opacity:0.5;\r\n}"}},2829:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart-stack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    ...\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>legendHolderBar<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-l-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart-stack">\r\n    ...\r\n</div>\r\n<div id="legendHolderBar" class="p-l-lg"></div>'}},2830:function(n,a){n.exports={snippet:'<span class="token operator">...</span>\r\nlegend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n    container<span class="token punctuation">:</span><span class="token string">"#legendHolderBar"</span><span class="token punctuation">,</span>\r\n    noColumns<span class="token punctuation">:</span> <span class="token number">0</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n<span class="token operator">...</span>',example:'...\r\nlegend: {\r\n    show: true,\r\n    container:"#legendHolderBar",\r\n    noColumns: 0\r\n},\r\n...'}},2831:function(n,a){n.exports='<div class="flot-chart-stack">\r\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">label</td>\r\n                <td>string</td>\r\n                <td>Label name specified in the legend.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">data</td>\r\n                <td>number or array</td>\r\n                <td>An array of coordinates defining the data, e.g. [ [x1, y1], [x2, y2], ... ]</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">color</td>\r\n                <td>color</td>\r\n                <td>Defines the color of each section.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">highlightColor</td>\r\n                <td>color</td>\r\n                <td>Default color of the translucent overlay used to highlight on mouse hover.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastFillColor</td>\r\n                <td>color</td>\r\n                <td>Defines the fill color for the portion representing forecast data.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastColor</td>\r\n                <td>color</td>\r\n                <td>Defines the stroke color for the portion representing forecast data.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastHighLightColor</td>\r\n                <td>color</td>\r\n                <td>Default color of the translucent overlay used to highlight on mouse hover for the portion representing forecast\r\n                    data.</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastDashStyle</td>\r\n                <td>array</td>\r\n                <td>Defines a list of numbers that specifies distances to alternately draw a line and a gap (in coordinate space\r\n                    units). Similar to this property in HTML5 Canvas. Default is [5].</td>\r\n                <td>true</td>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">forecastData</td>\r\n                <td>number or array</td>\r\n                <td>An array of coordinates defining the forecast or future data, e.g. [ [x1, y1], [x2, y2], ... ]</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<p>Stacked Bar Charts are defined by the <code>flot</code> directive. The dataset and options attributes\r\n    define the chart data and options respectively.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<div class="demo-attributes table-responsive">\r\n    <table class="table">\r\n        <tbody>\r\n            <tr>\r\n                <th>Property</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                <th>Optional</th>\r\n            </tr>\r\n            <tr>\r\n                <td class="attribute">stack</td>\r\n                <td>boolean</td>\r\n                <td>If set to true shows the chart in stacked form.</td>\r\n                <td>true</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\r\n</blockquote>\r\n\r\n<p>Stacked bar charts are an enhanced version of bar charts. For more information on options, refer to the bar chart documentation.</p>\r\n\r\n<p>To convey chart information to users with assistive technologies, you can include a text version of the data. Use the\r\n    <code\r\n       >sr-only</code> class to make the text hidden but visible to screen readers, and give the container a <code>tabindex</code>        attribute so it can be reached with the keyboard, and place it near the chart.</p>\r\n\r\n<uxd-snippet language="html" [content]="snippets.compiled.accessibilityHtml"></uxd-snippet>\r\n\r\n<p>The legends are custom-styled in this example. To place the legends separately from the chart, you can define a <code>div</code>    with an id and specify this in legend options. The <code>div</code> is then placed below the\r\n    HTML of the stacked bar chart. The styles and options applied here are:</p>\r\n\r\n<tabset>\r\n    <tab heading="Legend HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.legendHtml"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Legend CSS">\r\n        <uxd-snippet language="css" [content]="snippets.compiled.legendCss"></uxd-snippet>\r\n    </tab>\r\n\r\n    <tab heading="Legend Options">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.legendJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\r\n</blockquote>'},2832:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1080),u=s(1085),i=s(1071),k=function(n){function a(a){var t=n.call(this,s(2833))||this;t.plunk={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},t.barChartData=[{data:[34,25,19,34,32,44,50,67],borderWidth:1}],t.barChartLabels=[".doc",".ppt",".pdf",".xls",".html",".txt",".csv",".mht"],t.barChartLegend=!1;var o=a.getColor("grey2").setAlpha(.5).toRgba(),p=a.getColor("chart1").setAlpha(.1).toRgba(),e=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex(),r=a.getColor("grey2").toHex();return t.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{barPercentage:.5,categoryPercentage:1,gridLines:{display:!0,zeroLineColor:o,color:"transparent"}}],yAxes:[{type:"linear",gridLines:{zeroLineColor:o},ticks:{min:0,max:80,stepSize:20}}]},tooltips:{backgroundColor:r,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},t.barChartColors=[{backgroundColor:p,hoverBackgroundColor:e,borderColor:c}],t}return t(a,n),a.prototype.ngAfterViewInit=function(){var n=this.baseChart.chart,a=u.Chart;a.helpers.each(n.getDatasetMeta(0).data,function(s,t){t>=6&&(s.draw=function(){n.chart.ctx.save(),n.chart.ctx.setLineDash([2,2]),a.elements.Rectangle.prototype.draw.apply(this,arguments),n.chart.ctx.restore()})})},a}(i.BaseDocumentationSection);o([e.ViewChild(l.BaseChartDirective),p("design:type",l.BaseChartDirective)],k.prototype,"baseChart",void 0),k=o([e.Component({selector:"uxd-charts-bar-chart",template:s(2837)}),c.DocumentationSectionComponent("ChartsBarChartComponent"),p("design:paramtypes",[r.ColorService])],k),a.ChartsBarChartComponent=k},2833:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./app.css":2834,"./app.html":2835,"./app.ts":2836};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2833},2834:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\r\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\r\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".demo-chart-container {\r\n    display: block;\r\n    position: relative;\r\n    height: 200px;\r\n}"}},2835:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \r\n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span> \r\n            <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span> \r\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span> \r\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span> \r\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\r\n\r\n    <canvas baseChart \r\n            [datasets]="barChartData" \r\n            [labels]="barChartLabels" \r\n            [options]="barChartOptions" \r\n            [legend]="barChartLegend"\r\n            [colors]="barChartColors" \r\n            chartType="bar">\r\n    </canvas>\r\n\r\n</div>'}},2836:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild<span class="token punctuation">,</span> AfterViewInit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Chart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\r\n\r\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\r\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./src/app.component.html\'</span><span class="token punctuation">,</span>\r\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/app.component.css\'</span><span class="token punctuation">]</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">AfterViewInit</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token comment" spellcheck="true">// access the chart directive properties</span>\r\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token punctuation">:</span> BaseChartDirective<span class="token punctuation">;</span>\r\n\r\n    <span class="token comment" spellcheck="true">// configure the directive data</span>\r\n    barChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        borderWidth<span class="token punctuation">:</span> <span class="token number">1</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    barChartLabels<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">,</span> <span class="token string">\'.mht\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    barChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\r\n    barChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n    barChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\r\n\r\n    <span class="token function">constructor</span><span class="token punctuation">(</span>colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token comment" spellcheck="true">// Prepare colors used in chart</span>\r\n        <span class="token keyword">let</span> borderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    barPercentage<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\r\n                    categoryPercentage<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        display<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                        zeroLineColor<span class="token punctuation">:</span> borderColor<span class="token punctuation">,</span>\r\n                        color<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    type<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        zeroLineColor<span class="token punctuation">:</span> borderColor\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                        max<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\r\n                        stepSize<span class="token punctuation">:</span> <span class="token number">20</span>\r\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                backgroundColor<span class="token punctuation">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\r\n                cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                callbacks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    title<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    label<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>xLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>yLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                displayColors<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n            <span class="token punctuation">{</span>\r\n                backgroundColor<span class="token punctuation">:</span> barBackgroundColor<span class="token punctuation">,</span>\r\n                hoverBackgroundColor<span class="token punctuation">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\r\n                borderColor<span class="token punctuation">:</span> barBorderColor\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token comment" spellcheck="true">// get instance of the chart</span>\r\n        <span class="token keyword">let</span> chartInstance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseChart<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\r\n\r\n        <span class="token comment" spellcheck="true">// create reference to Chart with type of any</span>\r\n        <span class="token keyword">let</span> chartJs <span class="token operator">=</span> Chart <span class="token keyword">as</span> any<span class="token punctuation">;</span>\r\n\r\n        <span class="token comment" spellcheck="true">// Added dashed borders to forecast data</span>\r\n        chartJs<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>chartInstance<span class="token punctuation">.</span><span class="token function">getDatasetMeta</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span>bar<span class="token punctuation">:</span> any<span class="token punctuation">,</span> index<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n\r\n            <span class="token comment" spellcheck="true">// only alter the bars that are forecast data</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                bar<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    chartInstance<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    chartInstance<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    chartJs<span class="token punctuation">.</span>elements<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>draw<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    chartInstance<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ColorService } from '@ux-aspects/ux-aspects';\r\nimport { BaseChartDirective } from 'ng2-charts';\r\nimport { Chart } from 'chart.js';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './src/app.component.html',\r\n    styleUrls: ['./src/app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n    // access the chart directive properties\r\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\r\n\r\n    // configure the directive data\r\n    barChartData: Chart.ChartData = [{\r\n        data: [34, 25, 19, 34, 32, 44, 50, 67],\r\n        borderWidth: 1\r\n    }];\r\n\r\n    barChartLabels: string[] = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt', '.csv', '.mht'];\r\n    barChartOptions: Chart.ChartOptions;\r\n    barChartLegend: boolean = false;\r\n    barChartColors: any;\r\n\r\n    constructor(colorService: ColorService) {\r\n\r\n        // Prepare colors used in chart\r\n        let borderColor = colorService.getColor('grey2').setAlpha(0.5).toRgba();\r\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\r\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\r\n        let barBorderColor = colorService.getColor('chart1').toHex();\r\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\r\n\r\n        this.barChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    barPercentage: 0.5,\r\n                    categoryPercentage: 1,\r\n                    gridLines: {\r\n                        display: true,\r\n                        zeroLineColor: borderColor,\r\n                        color: 'transparent'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    gridLines: {\r\n                        zeroLineColor: borderColor\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 80,\r\n                        stepSize: 20\r\n                    } as Chart.LinearTickOptions\r\n                }]\r\n            },\r\n            tooltips: {\r\n                backgroundColor: tooltipBackgroundColor,\r\n                cornerRadius: 0,\r\n                callbacks: {\r\n                    title: (item: Chart.ChartTooltipItem[]) => {\r\n                        return;\r\n                    },\r\n                    label: (item: Chart.ChartTooltipItem) => {\r\n                        return `x: ${ item.xLabel }, y: ${ item.yLabel }`;\r\n                    }\r\n                },\r\n                displayColors: false\r\n            } as any\r\n        };\r\n\r\n        this.barChartColors = [\r\n            {\r\n                backgroundColor: barBackgroundColor,\r\n                hoverBackgroundColor: barHoverBackgroundColor,\r\n                borderColor: barBorderColor\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        // get instance of the chart\r\n        let chartInstance = this.baseChart.chart;\r\n\r\n        // create reference to Chart with type of any\r\n        let chartJs = Chart as any;\r\n\r\n        // Added dashed borders to forecast data\r\n        chartJs.helpers.each(chartInstance.getDatasetMeta(0).data, (bar: any, index: number) => {\r\n\r\n            // only alter the bars that are forecast data\r\n            if (index >= 6) {\r\n                bar.draw = function () {\r\n                    chartInstance.chart.ctx.save();\r\n                    chartInstance.chart.ctx.setLineDash([2, 2]);\r\n                    chartJs.elements.Rectangle.prototype.draw.apply(this, arguments);\r\n                    chartInstance.chart.ctx.restore();\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n}"}},2837:function(n,a){n.exports='<div class="demo-chart-container">\r\n\r\n    <canvas baseChart [datasets]="barChartData" [labels]="barChartLabels" [options]="barChartOptions" [legend]="barChartLegend"\r\n        [colors]="barChartColors" chartType="bar">\r\n    </canvas>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>\r\n    Bar Charts can be added using the <code>ng2-charts</code> library. \r\n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\r\n</p>\r\n\r\n<br>\r\n\r\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\r\n\r\n\r\n<table class="table">\r\n\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> datasets</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> chartType</td>\r\n            <td><b>string</b></td>\r\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> options</td>\r\n            <td><b>ChartOptions</b></td>\r\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> colors</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Configure the color values to be used within the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> legend</td>\r\n            <td><b>boolean</b></td>\r\n            <td>Determines whether or not the legend should be displayed.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartClick</td>\r\n            <td></td>\r\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartHover</td>\r\n            <td></td>\r\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n\r\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\r\n\r\n<p>The following code can be used to create the example above: </p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.appHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="TypeScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.appTs"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="snippets.compiled.appCss"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<br>\r\n\r\n<blockquote>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Dependencies: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \r\n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Type Definitions: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Modules: </b>\r\n        <span>ChartsModule</span>\r\n    </p>\r\n\r\n\r\n    <p class="m-b-nil">\r\n        <b>Documentation: </b>\r\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \r\n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\r\n    </p>\r\n</blockquote>'},2838:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2839))||this;t.plunk={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},t.barChartData=[{data:[44,32,34,19,25,34],borderWidth:1}],t.barChartLabels=[".txt",".html",".xls",".pdf",".ppt",".doc"],t.barChartLegend=!1;var o=(a.getColor("grey2").setAlpha(.5).toRgba(),a.getColor("grey2").toHex()),p=a.getColor("chart1").setAlpha(.1).toRgba(),e=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex();return t.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{gridLines:{color:"transparent"},ticks:{min:0,max:45,stepSize:5}}],yAxes:[{barPercentage:.5,categoryPercentage:1,gridLines:{color:"transparent"}}]},tooltips:{backgroundColor:o,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},t.barChartColors=[{backgroundColor:p,hoverBackgroundColor:e,borderColor:c}],t}return t(a,n),a}(l.BaseDocumentationSection);u=o([e.Component({selector:"uxd-charts-horizontal-bar-chart",template:s(2843)}),c.DocumentationSectionComponent("ChartsHorizontalBarChartComponent"),p("design:paramtypes",[r.ColorService])],u),a.ChartsHorizontalBarChartComponent=u},2839:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./app.css":2840,"./app.html":2841,"./app.ts":2842};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2839},2840:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\r\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\r\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".demo-chart-container {\r\n    display: block;\r\n    position: relative;\r\n    height: 200px;\r\n}"}},2841:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \r\n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontalBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\r\n\r\n    <canvas baseChart \r\n            [datasets]="barChartData"\r\n            [labels]="barChartLabels"\r\n            [options]="barChartOptions"\r\n            [legend]="barChartLegend"\r\n            [colors]="barChartColors"\r\n            chartType="horizontalBar">\r\n    </canvas>\r\n\r\n</div>'}},2842:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\r\n\r\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\r\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./src/app.component.html\'</span><span class="token punctuation">,</span>\r\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/app.component.css\'</span><span class="token punctuation">]</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token comment" spellcheck="true">// configure the directive data</span>\r\n    barChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        borderWidth<span class="token punctuation">:</span> <span class="token number">1</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    barChartLabels<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.doc\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    barChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\r\n    barChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n    barChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\r\n\r\n    <span class="token function">constructor</span><span class="token punctuation">(</span>colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">let</span> borderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        color<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                        max<span class="token punctuation">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\r\n                        stepSize<span class="token punctuation">:</span> <span class="token number">5</span>\r\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    barPercentage<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\r\n                    categoryPercentage<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        color<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>ChartXAxe<span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                backgroundColor<span class="token punctuation">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\r\n                cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                callbacks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    title<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    label<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>xLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>yLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                displayColors<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n            backgroundColor<span class="token punctuation">:</span> barBackgroundColor<span class="token punctuation">,</span>\r\n            hoverBackgroundColor<span class="token punctuation">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\r\n            borderColor<span class="token punctuation">:</span> barBorderColor\r\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token punctuation">}</span>\r\n\r\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\r\nimport { ColorService } from '@ux-aspects/ux-aspects';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './src/app.component.html',\r\n    styleUrls: ['./src/app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    // configure the directive data\r\n    barChartData: Chart.ChartData = [{\r\n        data: [44, 32, 34, 19, 25, 34],\r\n        borderWidth: 1\r\n    }];\r\n\r\n    barChartLabels: string[] = ['.txt', '.html', '.xls', '.pdf', '.ppt', '.doc'];\r\n    barChartOptions: Chart.ChartOptions;\r\n    barChartLegend: boolean = false;\r\n    barChartColors: any;\r\n\r\n    constructor(colorService: ColorService) {\r\n\r\n        let borderColor = colorService.getColor('grey2').setAlpha(0.5).toRgba();\r\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\r\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\r\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\r\n        let barBorderColor = colorService.getColor('chart1').toHex();\r\n\r\n        this.barChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        color: 'transparent'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 45,\r\n                        stepSize: 5\r\n                    } as Chart.LinearTickOptions\r\n                }],\r\n                yAxes: [{\r\n                    barPercentage: 0.5,\r\n                    categoryPercentage: 1,\r\n                    gridLines: {\r\n                        color: 'transparent'\r\n                    }\r\n                } as Chart.ChartXAxe]\r\n            },\r\n            tooltips: {\r\n                backgroundColor: tooltipBackgroundColor,\r\n                cornerRadius: 0,\r\n                callbacks: {\r\n                    title: (item: Chart.ChartTooltipItem[]) => {\r\n                        return;\r\n                    },\r\n                    label: (item: Chart.ChartTooltipItem) => {\r\n                        return `x: ${ item.xLabel }, y: ${ item.yLabel }`;\r\n                    }\r\n                },\r\n                displayColors: false\r\n            } as any\r\n        };\r\n\r\n        this.barChartColors = [{\r\n            backgroundColor: barBackgroundColor,\r\n            hoverBackgroundColor: barHoverBackgroundColor,\r\n            borderColor: barBorderColor\r\n        }];\r\n\r\n    }\r\n\r\n}"}},2843:function(n,a){n.exports='<div class="demo-chart-container">\r\n\r\n    <canvas baseChart \r\n            [datasets]="barChartData"\r\n            [labels]="barChartLabels"\r\n            [options]="barChartOptions"\r\n            [legend]="barChartLegend"\r\n            [colors]="barChartColors"\r\n            chartType="horizontalBar">\r\n    </canvas>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>\r\n    Horizontal Bar Charts can be added using the <code>ng2-charts</code> library. \r\n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\r\n</p>\r\n\r\n<br>\r\n\r\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\r\n\r\n\r\n<table class="table">\r\n\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> datasets</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> chartType</td>\r\n            <td><b>string</b></td>\r\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> options</td>\r\n            <td><b>ChartOptions</b></td>\r\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> colors</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Configure the color values to be used within the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> legend</td>\r\n            <td><b>boolean</b></td>\r\n            <td>Determines whether or not the legend should be displayed.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartClick</td>\r\n            <td></td>\r\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartHover</td>\r\n            <td></td>\r\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n\r\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\r\n\r\n<p>The following code can be used to create the example above: </p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.appHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="TypeScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.appTs"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="snippets.compiled.appCss"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<br>\r\n\r\n<blockquote>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Dependencies: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \r\n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Type Definitions: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Modules: </b>\r\n        <span>ChartsModule</span>\r\n    </p>\r\n\r\n\r\n    <p class="m-b-nil">\r\n        <b>Documentation: </b>\r\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \r\n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\r\n    </p>\r\n</blockquote>'},2844:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(o=n[c])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),c=s(353),r=s(122),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2845))||this;t.colorService=a,t.plunk={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.6.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},t.barChartLabels=["1","2","3","4","5","6","7","8","9","10","11","12","13"],t.barChartLegend=!1;var o=(a.getColor("grey2").setAlpha(.5).toRgba(),a.getColor("grey2").toHex());a.getColor("chart1").toHex();return t.barChartData=[{data:t.generateRandomData()},{data:t.generateRandomData()},{data:t.generateRandomData()}],t.barChartOptions={maintainAspectRatio:!1,responsive:!0,hover:{mode:"nearest"},scales:{xAxes:[{stacked:!0,barPercentage:.6,categoryPercentage:1,gridLines:{color:"transparent"}}],yAxes:[{stacked:!0,ticks:{min:0,max:3e4,stepSize:5e3,callback:function(n,a,s){return n+"€"}}}]},tooltips:{backgroundColor:o,cornerRadius:0,callbacks:{title:function(n){return"Sales "+(n[0].datasetIndex+1)},label:function(n){return n.yLabel+"€ in cycle "+n.index}},displayColors:!1}},t.barChartColors=[t.generateBarColors("chart1"),t.generateBarColors("chart2"),t.generateBarColors("chart3")],t}return t(a,n),a.prototype.generateRandomData=function(){for(var n=[],a=0;a<13;a++)n.push(Math.floor(1e4*Math.random()));return n},a.prototype.generateBarColors=function(n){for(var a=[],s=[],t=0;t<13;t++)a.push(this.colorService.getColor(n).setAlpha(t<10?.7:.3).toRgba()),s.push(this.colorService.getColor(n).setAlpha(t<10?.8:.4).toRgba());return{backgroundColor:a,hoverBackgroundColor:s}},a}(l.BaseDocumentationSection);u=o([e.Component({selector:"uxd-charts-stacked-bar-chart",template:s(2849)}),c.DocumentationSectionComponent("ChartsStackedBarChartComponent"),p("design:paramtypes",[r.ColorService])],u),a.ChartsStackedBarChartComponent=u},2845:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./app.css":2846,"./app.html":2847,"./app.ts":2848};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2845},2846:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container-stack</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\r\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        \r\n    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".demo-chart-container-stack {\r\n    display: block;\r\n    position: relative;        \r\n    height: 400px;\r\n}"}},2847:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container-stack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \r\n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container-stack">\r\n\r\n    <canvas baseChart \r\n            [datasets]="barChartData"\r\n            [labels]="barChartLabels"\r\n            [options]="barChartOptions"\r\n            [legend]="barChartLegend"\r\n            [colors]="barChartColors"\r\n            chartType="bar">\r\n    </canvas>\r\n\r\n</div>'}},2848:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\r\n\r\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\r\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./src/app.component.html\'</span><span class="token punctuation">,</span>\r\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/app.component.css\'</span><span class="token punctuation">]</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token comment" spellcheck="true">// configure the directive data</span>\r\n    barChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    barChartLabels<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span> <span class="token string">\'6\'</span><span class="token punctuation">,</span> <span class="token string">\'7\'</span><span class="token punctuation">,</span> <span class="token string">\'8\'</span><span class="token punctuation">,</span> <span class="token string">\'9\'</span><span class="token punctuation">,</span> <span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'11\'</span><span class="token punctuation">,</span> <span class="token string">\'12\'</span><span class="token punctuation">,</span> <span class="token string">\'13\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    barChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\r\n    barChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n    barChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\r\n\r\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">let</span> borderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n            <span class="token punctuation">{</span>\r\n                data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">{</span>\r\n                data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">{</span>\r\n                data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            hover<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                mode<span class="token punctuation">:</span> <span class="token string">\'nearest\'</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    stacked<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    barPercentage<span class="token punctuation">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\r\n                    categoryPercentage<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        color<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    stacked<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                        max<span class="token punctuation">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>\r\n                        stepSize<span class="token punctuation">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>\r\n                        callback<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> any<span class="token punctuation">,</span> index<span class="token punctuation">:</span> any<span class="token punctuation">,</span> values<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                            <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token string">\'€\'</span><span class="token punctuation">;</span>\r\n                        <span class="token punctuation">}</span>\r\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                backgroundColor<span class="token punctuation">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\r\n                cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                callbacks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    title<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Sales </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>datasetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                    label<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">€ in cycle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                displayColors<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">let</span> data<span class="token punctuation">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token comment" spellcheck="true">// generate random data</span>\r\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">return</span> data<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">generateBarColors</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">let</span> backgroundColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> hoverColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n            backgroundColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\r\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\r\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.7</span> <span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">)</span>\r\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n            hoverColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\r\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\r\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.8</span> <span class="token punctuation">:</span> <span class="token number">0.4</span><span class="token punctuation">)</span>\r\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\r\n            backgroundColor<span class="token punctuation">:</span> backgroundColors<span class="token punctuation">,</span>\r\n            hoverBackgroundColor<span class="token punctuation">:</span> hoverColors\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\r\nimport { ColorService } from '@ux-aspects/ux-aspects';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './src/app.component.html',\r\n    styleUrls: ['./src/app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    // configure the directive data\r\n    barChartData: Chart.ChartDataSets[];\r\n    barChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];\r\n    barChartOptions: Chart.ChartOptions;\r\n    barChartLegend: boolean = false;\r\n    barChartColors: any;\r\n\r\n    constructor(private colorService: ColorService) {\r\n\r\n        let borderColor = colorService.getColor('grey2').setAlpha(0.5).toRgba();\r\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\r\n        let barBorderColor = colorService.getColor('chart1').toHex();\r\n\r\n        this.barChartData = [\r\n            {\r\n                data: this.generateRandomData()\r\n            },\r\n            {\r\n                data: this.generateRandomData()\r\n            },\r\n            {\r\n                data: this.generateRandomData()\r\n            }\r\n        ];\r\n\r\n        this.barChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            hover: {\r\n                mode: 'nearest'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    barPercentage: 0.6,\r\n                    categoryPercentage: 1,\r\n                    gridLines: {\r\n                        color: 'transparent'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 30000,\r\n                        stepSize: 5000,\r\n                        callback: (value: any, index: any, values: any) => {\r\n                            return value + '€';\r\n                        }\r\n                    } as Chart.LinearTickOptions\r\n                }]\r\n            },\r\n            tooltips: {\r\n                backgroundColor: tooltipBackgroundColor,\r\n                cornerRadius: 0,\r\n                callbacks: {\r\n                    title: (item: Chart.ChartTooltipItem[]) => {\r\n                        return `Sales ${item[0].datasetIndex + 1}`;\r\n                    },\r\n                    label: (item: Chart.ChartTooltipItem) => {\r\n                        return `${item.yLabel}€ in cycle ${item.index}`;\r\n                    }\r\n                },\r\n                displayColors: false\r\n            } as any\r\n        };\r\n\r\n        this.barChartColors = [\r\n            this.generateBarColors('chart1'),\r\n            this.generateBarColors('chart2'),\r\n            this.generateBarColors('chart3')\r\n        ];\r\n\r\n    }\r\n\r\n    generateRandomData(): number[] {\r\n\r\n        let data: number[] = [];\r\n\r\n        // generate random data\r\n        for (let idx = 0; idx < 13; idx++) {\r\n            data.push(Math.floor(Math.random() * 10000));\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    generateBarColors(baseColor: string) {\r\n\r\n        let backgroundColors = [];\r\n        let hoverColors = [];\r\n\r\n        for (let idx = 0; idx < 13; idx++) {\r\n\r\n            backgroundColors.push(\r\n                this.colorService.getColor(baseColor)\r\n                    .setAlpha(idx < 10 ? 0.7 : 0.3)\r\n                    .toRgba());\r\n\r\n            hoverColors.push(\r\n                this.colorService.getColor(baseColor)\r\n                    .setAlpha(idx < 10 ? 0.8 : 0.4)\r\n                    .toRgba());\r\n        }\r\n\r\n        return {\r\n            backgroundColor: backgroundColors,\r\n            hoverBackgroundColor: hoverColors\r\n        };\r\n    }\r\n\r\n}"}},2849:function(n,a){n.exports='<div class="demo-chart-container-stack">\r\n\r\n    <canvas baseChart \r\n            [datasets]="barChartData"\r\n            [labels]="barChartLabels"\r\n            [options]="barChartOptions"\r\n            [legend]="barChartLegend"\r\n            [colors]="barChartColors"\r\n            chartType="bar">\r\n    </canvas>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>\r\n    Stacked Bar Charts can be added using the <code>ng2-charts</code> library. \r\n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\r\n</p>\r\n\r\n<br>\r\n\r\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\r\n\r\n\r\n<table class="table">\r\n\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> datasets</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> chartType</td>\r\n            <td><b>string</b></td>\r\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> options</td>\r\n            <td><b>ChartOptions</b></td>\r\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> colors</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Configure the color values to be used within the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> legend</td>\r\n            <td><b>boolean</b></td>\r\n            <td>Determines whether or not the legend should be displayed.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartClick</td>\r\n            <td></td>\r\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartHover</td>\r\n            <td></td>\r\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n\r\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\r\n\r\n<p>The following code can be used to create the example above: </p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.appHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="TypeScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.appTs"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css" [content]="snippets.compiled.appCss"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<br>\r\n\r\n<blockquote>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Dependencies: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \r\n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Type Definitions: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Modules: </b>\r\n        <span>ChartsModule</span>\r\n    </p>\r\n\r\n\r\n    <p class="m-b-nil">\r\n        <b>Documentation: </b>\r\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \r\n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\r\n    </p>\r\n</blockquote>'}});