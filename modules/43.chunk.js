webpackJsonp([43],{1071:function(n,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var t=function(){function n(n){var a=this;this.snippets={compiled:{},raw:{}},n.keys().forEach(function(s){var t=s.replace("./","").replace(/\W+(\w)/g,function(n){return n[1].toUpperCase()}),o=n(s);o.snippet&&(a.snippets.compiled[t]=o.snippet),o.example&&(a.snippets.raw[t]=o.example)})}return n}();a.BaseDocumentationSection=t},1080:function(n,a,s){"use strict";!function(n){for(var s in n)a.hasOwnProperty(s)||(a[s]=n[s])}(s(1083))},1083:function(n,a,s){"use strict";function t(n,a){return"rgba("+n.concat(a).join(",")+")"}function o(n,a){return Math.floor(Math.random()*(a-n+1))+n}function p(n){return{backgroundColor:t(n,.4),borderColor:t(n,1),pointBackgroundColor:t(n,1),pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:t(n,.8)}}function e(n){return{backgroundColor:t(n,.6),borderColor:t(n,1),hoverBackgroundColor:t(n,.8),hoverBorderColor:t(n,1)}}function r(n){return{backgroundColor:n.map(function(n){return t(n,.6)}),borderColor:n.map(function(){return"#fff"}),pointBackgroundColor:n.map(function(n){return t(n,1)}),pointBorderColor:n.map(function(){return"#fff"}),pointHoverBackgroundColor:n.map(function(n){return t(n,1)}),pointHoverBorderColor:n.map(function(n){return t(n,1)})}}function c(n){return{backgroundColor:n.map(function(n){return t(n,.6)}),borderColor:n.map(function(n){return t(n,1)}),hoverBackgroundColor:n.map(function(n){return t(n,.8)}),hoverBorderColor:n.map(function(n){return t(n,1)})}}function i(){return[o(0,255),o(0,255),o(0,255)]}function l(n){return g.defaultColors[n]||i()}function u(n){for(var a=new Array(n),s=0;s<n;s++)a[s]=g.defaultColors[s]||i();return a}function k(n,a,s){return"pie"===n||"doughnut"===n?r(u(s)):"polarArea"===n?c(u(s)):"line"===n||"radar"===n?p(l(a)):"bar"===n||"horizontalBar"===n?e(l(a)):l(a)}var d=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var r=n.length-1;r>=0;r--)(o=n[r])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},h=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},f=s(2),m=s(1085),g=function(){function n(n){this.labels=[],this.options={},this.chartClick=new f.EventEmitter,this.chartHover=new f.EventEmitter,this.initFlag=!1,this.element=n}return n.prototype.ngOnInit=function(){this.ctx=this.element.nativeElement.getContext("2d"),this.cvs=this.element.nativeElement,this.initFlag=!0,(this.data||this.datasets)&&this.refresh()},n.prototype.ngOnChanges=function(n){this.initFlag&&(n.hasOwnProperty("data")||n.hasOwnProperty("datasets")?(n.data?this.updateChartData(n.data.currentValue):this.updateChartData(n.datasets.currentValue),this.chart.update()):this.refresh())},n.prototype.ngOnDestroy=function(){this.chart&&(this.chart.destroy(),this.chart=void 0)},n.prototype.getChartBuilder=function(n){var a=this,s=this.getDatasets(),t=Object.assign({},this.options);!1===this.legend&&(t.legend={display:!1}),t.hover=t.hover||{},t.hover.onHover||(t.hover.onHover=function(n){n&&!n.length||a.chartHover.emit({active:n})}),t.onClick||(t.onClick=function(n,s){a.chartClick.emit({event:n,active:s})});var o={type:this.chartType,data:{labels:this.labels,datasets:s},options:t};return new m.Chart(n,o)},n.prototype.updateChartData=function(n){Array.isArray(n[0].data)?this.chart.data.datasets.forEach(function(a,s){a.data=n[s].data,n[s].label&&(a.label=n[s].label)}):this.chart.data.datasets[0].data=n},n.prototype.getDatasets=function(){var n=this,a=void 0;if((!this.datasets||!this.datasets.length&&this.data&&this.data.length)&&(a=Array.isArray(this.data[0])?this.data.map(function(a,s){return{data:a,label:n.labels[s]||"Label "+s}}):[{data:this.data,label:"Label 0"}]),(this.datasets&&this.datasets.length||a&&a.length)&&(a=(this.datasets||a).map(function(a,s){var t=Object.assign({},a);return n.colors&&n.colors.length?Object.assign(t,n.colors[s]):Object.assign(t,k(n.chartType,s,t.data.length)),t})),!a)throw new Error("ng-charts configuration error,\n      data or datasets field are required to render char "+this.chartType);return a},n.prototype.refresh=function(){this.ngOnDestroy(),this.chart=this.getChartBuilder(this.ctx)},n}();g.defaultColors=[[255,99,132],[54,162,235],[255,206,86],[231,233,237],[75,192,192],[151,187,205],[220,220,220],[247,70,74],[70,191,189],[253,180,92],[148,159,177],[77,83,96]],d([f.Input(),h("design:type",Array)],g.prototype,"data",void 0),d([f.Input(),h("design:type",Array)],g.prototype,"datasets",void 0),d([f.Input(),h("design:type",Array)],g.prototype,"labels",void 0),d([f.Input(),h("design:type",Object)],g.prototype,"options",void 0),d([f.Input(),h("design:type",String)],g.prototype,"chartType",void 0),d([f.Input(),h("design:type",Array)],g.prototype,"colors",void 0),d([f.Input(),h("design:type",Boolean)],g.prototype,"legend",void 0),d([f.Output(),h("design:type",f.EventEmitter)],g.prototype,"chartClick",void 0),d([f.Output(),h("design:type",f.EventEmitter)],g.prototype,"chartHover",void 0),g=d([f.Directive({selector:"canvas[baseChart]",exportAs:"base-chart"}),h("design:paramtypes",[f.ElementRef])],g),a.BaseChartDirective=g;var v=function(){function n(){}return n}();v=d([f.NgModule({declarations:[g],exports:[g],imports:[]})],v),a.ChartsModule=v},2924:function(n,a,s){"use strict";var t=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var r=n.length-1;r>=0;r--)(o=n[r])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},o=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var p=s(2),e=s(32),r=s(2925),c=s(355),i=s(354),l=s(357),u=s(186),k=s(356),d=s(2930),h=s(1080),f=[r.ChartsLiveChartNg1Component,d.ChartsLiveChartComponent],m=[{path:"**",component:c.DocumentationCategoryComponent,data:{category:u.ResolverService.resolveCategoryData(u.DocumentationPage.Charts,"Live Chart")}}],g=function(){function n(n,a){a.registerResolver(n)}return n}();g=t([p.NgModule({imports:[k.TabsModule,l.WrappersModule,h.ChartsModule,i.DocumentationComponentsModule,e.RouterModule.forChild(m)],exports:f,declarations:f,entryComponents:f}),o("design:paramtypes",[p.ComponentFactoryResolver,u.ResolverService])],g),a.ChartsLiveChartsModule=g},2925:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var r=n.length-1;r>=0;r--)(o=n[r])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),r=s(353),c=s(122),i=s(1071),l=function(n){function a(a){var t=n.call(this,s(2926))||this;t.livedata=[],t.codepen={html:t.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"LiveChartCtrl as lc"},js:[t.snippets.raw.chartJs]};var o={primary:a.getColor("chart1").toRgb(),gridColor:a.getColor("grey4").toHex(),tickColor:a.getColor("grey6").toHex(),borderColor:a.getColor("grey2").setAlpha(.5).toRgba(),white:"#FFFFFF"};return t.series=[{data:t.getRandomData(),lines:{fill:!0,lineWidth:1,fillColor:{colors:[{opacity:.1},{opacity:.1}]}},shadowSize:0}],t.options={grid:{color:[o.gridColor],tickColor:[o.tickColor],borderWidth:{top:0,bottom:1,left:1,right:0},borderColor:{bottom:[o.borderColor],left:[o.borderColor]},minBorderMargin:20,labelMargin:10,backgroundColor:{colors:[[o.white],[o.white]]},margin:{top:8,bottom:20,left:20},markings:function(n){for(var a=[],s=n.xaxis,t=Math.floor(s.min);t<s.max;t+=2*s.tickSize)a.push({xaxis:{from:t,to:t+s.tickSize},color:[o.white]});return a}},colors:[o.primary],xaxis:{tickFormatter:function(){return""}},yaxis:{min:0,max:110},legend:{show:!0}},setInterval(function(){t.series[0].data=t.getRandomData()},40),t}return t(a,n),a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=this.livedata.length?this.livedata[this.livedata.length-1]:50,a=n+10*Math.random()-5;this.livedata.push(a<0?0:a>100?100:a)}for(var s=[],t=0;t<this.livedata.length;++t)s.push([t,this.livedata[t]]);return s},a}(i.BaseDocumentationSection);l=o([e.Component({selector:"uxd-charts-live-chart-ng1",template:s(2929),changeDetection:e.ChangeDetectionStrategy.OnPush}),r.DocumentationSectionComponent("ChartsLiveChartNg1Component"),p("design:paramtypes",[c.ColorService])],l),a.ChartsLiveChartNg1Component=l},2926:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./chart.html":2927,"./chart.js":2928};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2926},2927:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.series<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\r\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\r\n    <flot dataset="lc.liveChart.series" options="lc.liveChart.options" on-plot-click="lc.liveChart.onPlotClick(event,pos,item)"\r\n        on-hover-click="lc.liveChart.onPlotHover(event,pos,item)">\r\n    </flot>\r\n</div>'}},2928:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'LiveChartCtrl\'</span><span class="token punctuation">,</span> LiveChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\nLiveChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$interval\'</span><span class="token punctuation">,</span> <span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">function</span> <span class="token function">LiveChartCtrl</span><span class="token punctuation">(</span>$interval<span class="token punctuation">,</span> $colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token keyword">var</span> lc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        primary<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        gridColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        tickColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        borderColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n        white<span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">var</span> livedata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    <span class="token keyword">var</span> maximum <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">function</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            livedata <span class="token operator">=</span> livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> maximum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">var</span> previous <span class="token operator">=</span> livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> livedata<span class="token punctuation">[</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\r\n            <span class="token keyword">var</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\r\n            livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token comment" spellcheck="true">// zip the generated y values with the x values</span>\r\n\r\n        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    lc<span class="token punctuation">.</span>liveChart <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n            data<span class="token punctuation">:</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            lines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                fill<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n                lineWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                fillColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\r\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            shadowSize<span class="token punctuation">:</span> <span class="token number">0</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                tickColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>tickColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"right"</span><span class="token punctuation">:</span> <span class="token number">0</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                minBorderMargin<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\r\n                labelMargin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\r\n                backgroundColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\r\n                    <span class="token punctuation">]</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                margin<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    top<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\r\n                    bottom<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\r\n                    left<span class="token punctuation">:</span> <span class="token number">20</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                markings<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>axes<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    <span class="token keyword">var</span> markings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                    <span class="token keyword">var</span> xaxis <span class="token operator">=</span> axes<span class="token punctuation">.</span>xaxis<span class="token punctuation">;</span>\r\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>xaxis<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> xaxis<span class="token punctuation">.</span>max<span class="token punctuation">;</span> x <span class="token operator">+=</span> xaxis<span class="token punctuation">.</span>tickSize <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                        markings<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n                            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                                <span class="token keyword">from</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>\r\n                                to<span class="token punctuation">:</span> x <span class="token operator">+</span> xaxis<span class="token punctuation">.</span>tickSize\r\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\r\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                    <span class="token keyword">return</span> markings<span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                tickFormatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                max<span class="token punctuation">:</span> <span class="token number">110</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token function">$interval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        lc<span class="token punctuation">.</span>liveChart<span class="token punctuation">.</span>series<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n\r\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('LiveChartCtrl', LiveChartCtrl);\r\n\r\nLiveChartCtrl.$inject = ['$interval', '$colorService'];\r\n\r\nfunction LiveChartCtrl($interval, $colorService) {\r\n\r\n    var lc = this;\r\n\r\n    var flotChartColors = {\r\n        primary: $colorService.getColor('chart1').toRgb(),\r\n        gridColor: $colorService.getColor('grey4').toHex(),\r\n        tickColor: $colorService.getColor('grey6').toHex(),\r\n        borderColor: $colorService.getColor('grey2').setAlpha(0.5).toRgba(),\r\n        white: \"#FFFFFF\"\r\n    };\r\n\r\n    var livedata = [];\r\n    var maximum = 300;\r\n\r\n    function getRandomData() {\r\n\r\n        if (livedata.length) {\r\n            livedata = livedata.slice(1);\r\n        }\r\n\r\n        while (livedata.length < maximum) {\r\n            var previous = livedata.length ? livedata[livedata.length - 1] : 50;\r\n            var y = previous + Math.random() * 10 - 5;\r\n            livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\r\n        }\r\n\r\n        // zip the generated y values with the x values\r\n\r\n        var res = [];\r\n        for (var i = 0; i < livedata.length; ++i) {\r\n            res.push([i, livedata[i]]);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    lc.liveChart = {\r\n        series: [{\r\n            data: getRandomData(),\r\n            lines: {\r\n                fill: true,\r\n                lineWidth: 1,\r\n                fillColor: {\r\n                    colors: [{\r\n                        opacity: 0.1\r\n                    }, {\r\n                        opacity: 0.1\r\n                    }]\r\n                }\r\n            },\r\n            shadowSize: 0\r\n        }],\r\n        options: {\r\n            grid: {\r\n                color: [flotChartColors.gridColor],\r\n                tickColor: [flotChartColors.tickColor],\r\n                borderWidth: {\r\n                    \"top\": 0,\r\n                    \"bottom\": 1,\r\n                    \"left\": 1,\r\n                    \"right\": 0\r\n                },\r\n                borderColor: {\r\n                    \"bottom\": [flotChartColors.borderColor],\r\n                    \"left\": [flotChartColors.borderColor]\r\n                },\r\n                minBorderMargin: 20,\r\n                labelMargin: 10,\r\n                backgroundColor: {\r\n                    colors: [\r\n                        [flotChartColors.white],\r\n                        [flotChartColors.white]\r\n                    ]\r\n                },\r\n                margin: {\r\n                    top: 8,\r\n                    bottom: 20,\r\n                    left: 20\r\n                },\r\n                markings: function (axes) {\r\n                    var markings = [];\r\n                    var xaxis = axes.xaxis;\r\n                    for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\r\n                        markings.push({\r\n                            xaxis: {\r\n                                from: x,\r\n                                to: x + xaxis.tickSize\r\n                            },\r\n                            color: [flotChartColors.white]\r\n                        });\r\n                    }\r\n                    return markings;\r\n                }\r\n            },\r\n            colors: [flotChartColors.primary],\r\n            xaxis: {\r\n                tickFormatter: function () {\r\n                    return \"\";\r\n                }\r\n            },\r\n            yaxis: {\r\n                min: 0,\r\n                max: 110\r\n            },\r\n            legend: {\r\n                show: true\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    $interval(function () {\r\n        lc.liveChart.series[0].data = getRandomData();\r\n    }, 40);\r\n\r\n\r\n}"}},2929:function(n,a){n.exports='<div class="flot-chart">\r\n    <ux-flot-ng1 [dataset]="series" [options]="options"></ux-flot-ng1>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n    <tbody><tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">data</td>\r\n        <td>number or array</td>\r\n        <td>Coordinates in the Live chart.</td>\r\n        <td>false</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">series</td>\r\n        <td>string</td>\r\n        <td>Defines the chart type and its layout. Values include \'lines\', \'bar\' and \'points\'.</td>\r\n        <td>false</td>\r\n    </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>The following attributes should be defined within <code>series</code></p>\r\n\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n    <tbody><tr>\r\n        <th>Property</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Optional</th>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">lineWidth</td>\r\n        <td>number</td>\r\n        <td>Defines the thickness of the line chart.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">show</td>\r\n        <td>boolean</td>\r\n        <td>If set to true displays the chart.</td>\r\n        <td>false</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">fillColor</td>\r\n        <td>array</td>\r\n        <td>Specifies the colors of the fill. For Line chart this produces area graphs. If more than one color is specified this will produce a gradient.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">fill</td>\r\n        <td>boolean or number</td>\r\n        <td>If set to true fills the chart with colors in the fillColors property. A number between 0 and 1 defines the opacity of the fill.</td>\r\n        <td>true</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="attribute">shadowSize</td>\r\n        <td>number</td>\r\n        <td>Default size of shadows in pixels. Set it to 0 to remove shadows.</td>\r\n        <td>true</td>\r\n    </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<p>Live Charts are defined by the <code>flot</code> directive. The dataset and options attribute define the live chart data and options respectively.\r\nDataset and Options are defined within the LiveChartCtrl.</p>\r\n\r\n<tabset>\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.chartHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="Javascript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.chartJs"></uxd-snippet>\r\n    </tab>\r\n</tabset>\r\n\r\n<div class="demo-attributes table-responsive">\r\n<table class="table">\r\n  <tbody><tr>\r\n    <th>Property</th>\r\n    <th>Type</th>\r\n    <th>Description</th>\r\n    <th>Optional</th>\r\n  </tr>\r\n  <tr>\r\n    <td class="attribute">markings</td>\r\n    <td>array</td>\r\n    <td>Markings used to draw simple lines and rectangular areas in the background of the plot. It can be an array of ranges in the form of &#123; xaxis: &#123; from, to &#125;, yaxis: &#123; from, to &#125; &#125; or a function(above example) that returns this range.</td>\r\n    <td>true</td>\r\n  </tr>\r\n</tbody></table>\r\n</div>\r\n\r\n<blockquote>\r\n  <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\r\n</blockquote>\r\n\r\n<p>To support users of assistive technologies, provide a text summary of the chart with an <code>aria-label</code> or <code>span</code> hidden with the <code>sr-only</code> class. For live charts the most appropriate information to convey will vary depending on the chart’s purpose, but may typically be the highest or most recent data point.</p>\r\n\r\n<blockquote>\r\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\r\n</blockquote>'},2930:function(n,a,s){"use strict";var t=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),o=this&&this.__decorate||function(n,a,s,t){var o,p=arguments.length,e=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var r=n.length-1;r>=0;r--)(o=n[r])&&(e=(p<3?o(e):p>3?o(a,s,e):o(a,s))||e);return p>3&&e&&Object.defineProperty(a,s,e),e},p=this&&this.__metadata||function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};Object.defineProperty(a,"__esModule",{value:!0});var e=s(2),r=s(353),c=s(122),i=s(1080),l=s(1071),u=function(n){function a(a){var t=n.call(this,s(2931))||this;t.plunk={files:{"app.component.ts":t.snippets.raw.liveChartTs,"app.component.html":t.snippets.raw.liveChartHtml,"app.component.css":t.snippets.raw.liveChartCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},t.lineChartLegend=!1,t.livedata=[];var o=a.getColor("grey6").toHex(),p=a.getColor("chart1").toRgb(),e=a.getColor("chart1").setAlpha(.1).toRgba();a.getColor("chart1").setAlpha(.06).toRgba(),a.getColor("chart1").setAlpha(.5).toRgba();return t.updateChartData(),t.lineChartOptions={maintainAspectRatio:!1,responsive:!0,animation:!1,elements:{line:{tension:0}},scales:{xAxes:[{type:"linear",position:"bottom",ticks:{min:0,max:299,step:50,fontSize:0},gridLines:{color:o}}],yAxes:[{ticks:{min:0,max:100,stepSize:25},gridLines:{color:o}}]},tooltips:{enabled:!1}},t.lineChartColors=[{borderColor:p,backgroundColor:e,pointBackgroundColor:"transparent",pointBorderColor:"transparent"}],setInterval(function(){t.updateChartData()},40),t}return t(a,n),a.prototype.updateChartData=function(){this.lineChartData=new Array,this.lineChartData.push({data:this.getRandomData(),borderWidth:1})},a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=this.livedata.length?this.livedata[this.livedata.length-1]:50,a=n+10*Math.random()-5;this.livedata.push(a<0?0:a>100?100:a)}for(var s=[],t=0;t<this.livedata.length;++t)s.push({x:t,y:this.livedata[t]});return s},a}(l.BaseDocumentationSection);o([e.ViewChild(i.BaseChartDirective),p("design:type",i.BaseChartDirective)],u.prototype,"baseChart",void 0),u=o([e.Component({selector:"uxd-charts-live-chart",template:s(2935)}),r.DocumentationSectionComponent("ChartsLiveChartComponent"),p("design:paramtypes",[c.ColorService])],u),a.ChartsLiveChartComponent=u},2931:function(n,a,s){function t(n){return s(o(n))}function o(n){var a=p[n];if(!(a+1))throw new Error("Cannot find module '"+n+"'.");return a}var p={"./live-chart.css":2932,"./live-chart.html":2933,"./live-chart.ts":2934};t.keys=function(){return Object.keys(p)},t.resolve=o,n.exports=t,t.id=2931},2932:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\r\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\r\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\r\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>',example:".demo-chart-container {\r\n    display: block;\r\n    position: relative;\r\n    height: 200px;\r\n}"}},2933:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \r\n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartLegend<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\r\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\r\n\r\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\r\n\r\n    <canvas baseChart \r\n            [datasets]="lineChartData"\r\n            [options]="lineChartOptions"\r\n            [legend]="lineChartLegend"\r\n            [colors]="lineChartColors"\r\n            chartType="line">\r\n    </canvas>\r\n\r\n</div>'}},2934:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\r\n\r\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\r\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./src/app.component.html\'</span><span class="token punctuation">,</span>\r\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/app.component.css\'</span><span class="token punctuation">]</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\r\n\r\n    <span class="token comment" spellcheck="true">// access the chart directive properties</span>\r\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token punctuation">:</span> BaseChartDirective<span class="token punctuation">;</span>\r\n\r\n    <span class="token comment" spellcheck="true">// configure the directive data</span>\r\n    lineChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    lineChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\r\n    lineChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n    lineChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\r\n\r\n    livedata<span class="token punctuation">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token function">constructor</span><span class="token punctuation">(</span>colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">let</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> lineBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> lineFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> lineForecastFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.06</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">let</span> pointBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token comment" spellcheck="true">// set the initial chart data</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\r\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\r\n            elements<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                line<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                    tension<span class="token punctuation">:</span> <span class="token number">0</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    type<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\r\n                    position<span class="token punctuation">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\r\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                        max<span class="token punctuation">:</span> <span class="token number">299</span><span class="token punctuation">,</span>\r\n                        step<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\r\n                        fontSize<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">/* Hide Labels on X Axis */</span>\r\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        color<span class="token punctuation">:</span> gridColor\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\r\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n                        max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\r\n                        stepSize<span class="token punctuation">:</span> <span class="token number">25</span>\r\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\r\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                        color<span class="token punctuation">:</span> gridColor\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n                enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n            <span class="token punctuation">{</span>\r\n                borderColor<span class="token punctuation">:</span> lineBorderColor<span class="token punctuation">,</span>\r\n                backgroundColor<span class="token punctuation">:</span> lineFillColor<span class="token punctuation">,</span>\r\n                pointBackgroundColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\r\n                pointBorderColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\r\n            <span class="token comment" spellcheck="true">// update chart data every 40ms</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token comment" spellcheck="true">// instatiate new array to trigger change detection</span>\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>Chart<span class="token punctuation">.</span>ChartDataSets<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n            data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n            borderWidth<span class="token punctuation">:</span> <span class="token number">1</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> number<span class="token punctuation">,</span> y<span class="token punctuation">:</span> number<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\r\n\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\r\n            <span class="token keyword">let</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\r\n\r\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token comment" spellcheck="true">// zip the generated y values with the x values</span>\r\n        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n                x<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\r\n                y<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild } from '@angular/core';\r\nimport { ColorService } from '@ux-aspects/ux-aspects';\r\nimport { BaseChartDirective } from 'ng2-charts';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './src/app.component.html',\r\n    styleUrls: ['./src/app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    // access the chart directive properties\r\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\r\n\r\n    // configure the directive data\r\n    lineChartData: Chart.ChartDataSets[];\r\n    lineChartOptions: Chart.ChartOptions;\r\n    lineChartLegend: boolean = false;\r\n    lineChartColors: any;\r\n\r\n    livedata: number[] = [];\r\n\r\n    constructor(colorService: ColorService) {\r\n\r\n        let gridColor = colorService.getColor('grey6').toHex();\r\n        let lineBorderColor = colorService.getColor('chart1').toRgb();\r\n        let lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\r\n        let lineForecastFillColor = colorService.getColor('chart1').setAlpha(0.06).toRgba();\r\n        let pointBorderColor = colorService.getColor('chart1').setAlpha(0.5).toRgba();\r\n\r\n        // set the initial chart data\r\n        this.updateChartData();\r\n\r\n        this.lineChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            animation: false,\r\n            elements: {\r\n                line: {\r\n                    tension: 0\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    type: 'linear',\r\n                    position: 'bottom',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 299,\r\n                        step: 50,\r\n                        fontSize: 0 /* Hide Labels on X Axis */\r\n                    } as Chart.LinearTickOptions,\r\n                    gridLines: {\r\n                        color: gridColor\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        stepSize: 25\r\n                    } as Chart.LinearTickOptions,\r\n                    gridLines: {\r\n                        color: gridColor\r\n                    }\r\n                }]\r\n            },\r\n            tooltips: {\r\n                enabled: false\r\n            }\r\n        };\r\n\r\n        this.lineChartColors = [\r\n            {\r\n                borderColor: lineBorderColor,\r\n                backgroundColor: lineFillColor,\r\n                pointBackgroundColor: 'transparent',\r\n                pointBorderColor: 'transparent'\r\n            }\r\n        ];\r\n\r\n        setInterval(() => {\r\n            // update chart data every 40ms\r\n            this.updateChartData();\r\n        }, 40);\r\n    }\r\n\r\n    updateChartData() {\r\n\r\n        // instatiate new array to trigger change detection\r\n        this.lineChartData = new Array<Chart.ChartDataSets>();\r\n\r\n        this.lineChartData.push({\r\n            data: this.getRandomData(),\r\n            borderWidth: 1\r\n        });\r\n    }\r\n\r\n    getRandomData(): { x: number, y: number}[] {\r\n\r\n        if (this.livedata.length) {\r\n            this.livedata = this.livedata.slice(1);\r\n        }\r\n\r\n        while (this.livedata.length < 300) {\r\n            let previous = this.livedata.length ? this.livedata[this.livedata.length - 1] : 50;\r\n            let y = previous + Math.random() * 10 - 5;\r\n\r\n            this.livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\r\n        }\r\n\r\n        // zip the generated y values with the x values\r\n        let res = [];\r\n        for (let i = 0; i < this.livedata.length; ++i) {\r\n            res.push({\r\n                x: i,\r\n                y: this.livedata[i]\r\n            });\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n}"}},2935:function(n,a){n.exports='<div class="demo-chart-container">\r\n\r\n    <canvas baseChart \r\n            [datasets]="lineChartData"\r\n            [options]="lineChartOptions"\r\n            [legend]="lineChartLegend"\r\n            [colors]="lineChartColors"\r\n            chartType="line">\r\n    </canvas>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<p>\r\n    Live Charts can be added using the <code>ng2-charts</code> library. \r\n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\r\n</p>\r\n\r\n<br>\r\n\r\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\r\n\r\n\r\n<table class="table">\r\n\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> datasets</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> chartType</td>\r\n            <td><b>string</b></td>\r\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> options</td>\r\n            <td><b>ChartOptions</b></td>\r\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> colors</td>\r\n            <td><b>object[]</b></td>\r\n            <td>Configure the color values to be used within the chart.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Input</b> legend</td>\r\n            <td><b>boolean</b></td>\r\n            <td>Determines whether or not the legend should be displayed.</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartClick</td>\r\n            <td></td>\r\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>@Output</b> chartHover</td>\r\n            <td></td>\r\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n\r\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\r\n\r\n<p>The following code can be used to create the example above: </p>\r\n\r\n<tabset>\r\n\r\n    <tab heading="HTML">\r\n        <uxd-snippet language="html" [content]="snippets.compiled.liveChartHtml"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="TypeScript">\r\n        <uxd-snippet language="javascript" [content]="snippets.compiled.liveChartTs"></uxd-snippet>\r\n    </tab>\r\n    \r\n    <tab heading="CSS">\r\n        <uxd-snippet language="css"[content]="snippets.compiled.liveChartCss"></uxd-snippet>\r\n    </tab>\r\n\r\n</tabset>\r\n\r\n<br>\r\n\r\n<blockquote>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Dependencies: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \r\n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Type Definitions: </b>\r\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\r\n    </p>\r\n\r\n    <p class="m-b-nil">\r\n        <b>Modules: </b>\r\n        <span>ChartsModule</span>\r\n    </p>\r\n\r\n\r\n    <p class="m-b-nil">\r\n        <b>Documentation: </b>\r\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \r\n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\r\n    </p>\r\n</blockquote>'}});